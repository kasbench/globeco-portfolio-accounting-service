version: '3.8'

# Production configuration for GlobeCo Portfolio Accounting Service
services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: globeco-portfolio-accounting-postgresql-prod
    environment:
      POSTGRES_DB: portfolio_accounting
      POSTGRES_USER: portfolio_user
      POSTGRES_PASSWORD: portfolio_pass
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5439:5432"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    networks:
      - globeco-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U portfolio_user -d portfolio_accounting"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Portfolio Accounting Service (Production)
  portfolio-accounting-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: globeco-portfolio-accounting-service-prod
    ports:
      - "8087:8087"
    environment:
      # Database Configuration
      GLOBECO_PA_DATABASE_HOST: postgres
      GLOBECO_PA_DATABASE_PORT: 5432
      GLOBECO_PA_DATABASE_DATABASE: portfolio_accounting
      GLOBECO_PA_DATABASE_USER: portfolio_user
      GLOBECO_PA_DATABASE_PASSWORD: portfolio_pass
      GLOBECO_PA_DATABASE_SSL_MODE: disable
      GLOBECO_PA_DATABASE_MIGRATIONS_PATH: /migrations
      GLOBECO_PA_DATABASE_AUTO_MIGRATE: "true"

      # Application Configuration
      GLOBECO_PA_SERVER_HOST: 0.0.0.0
      GLOBECO_PA_SERVER_PORT: 8087
      GLOBECO_PA_LOGGING_LEVEL: info
      GLOBECO_PA_LOGGING_FORMAT: json
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - globeco-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8087/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_prod_data:
    driver: local

networks:
  globeco-network:
    driver: bridge
    name: globeco-prod-network 