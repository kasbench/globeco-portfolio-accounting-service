apiVersion: v1
kind: ServiceAccount
metadata:
  name: hazelcast
  namespace: globeco-portfolio-accounting
  labels:
    app.kubernetes.io/name: globeco-portfolio-accounting
    app.kubernetes.io/component: cache

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hazelcast
  namespace: globeco-portfolio-accounting
  labels:
    app.kubernetes.io/name: globeco-portfolio-accounting
    app.kubernetes.io/component: cache
rules:
- apiGroups: [""]
  resources: ["endpoints", "pods", "services"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hazelcast
  namespace: globeco-portfolio-accounting
  labels:
    app.kubernetes.io/name: globeco-portfolio-accounting
    app.kubernetes.io/component: cache
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hazelcast
subjects:
- kind: ServiceAccount
  name: hazelcast
  namespace: globeco-portfolio-accounting

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hazelcast
  namespace: globeco-portfolio-accounting
  labels:
    app.kubernetes.io/name: globeco-portfolio-accounting
    app.kubernetes.io/instance: production
    app.kubernetes.io/version: "5.3"
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: globeco-suite
    app.kubernetes.io/managed-by: kubernetes
spec:
  serviceName: hazelcast-service
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: globeco-portfolio-accounting
      app.kubernetes.io/component: cache
  template:
    metadata:
      labels:
        app.kubernetes.io/name: globeco-portfolio-accounting
        app.kubernetes.io/instance: production
        app.kubernetes.io/component: cache
        app.kubernetes.io/part-of: globeco-suite
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: hazelcast
      containers:
      - name: hazelcast
        image: hazelcast/hazelcast:5.3.7
        ports:
        - containerPort: 5701
          name: hazelcast
        - containerPort: 8080
          name: metrics
        env:
        - name: JAVA_OPTS
          valueFrom:
            configMapKeyRef:
              name: portfolio-accounting-config
              key: JAVA_OPTS
        - name: HZ_CLUSTERNAME
          valueFrom:
            configMapKeyRef:
              name: portfolio-accounting-config
              key: CACHE_CLUSTER_NAME
        - name: HZ_NETWORK_KUBERNETES_ENABLED
          value: "true"
        - name: HZ_NETWORK_KUBERNETES_NAMESPACE
          value: "globeco-portfolio-accounting"
        - name: HZ_NETWORK_KUBERNETES_SERVICE_NAME
          value: "hazelcast-service"
        - name: HZ_NETWORK_KUBERNETES_USE_NODE_NAME_AS_EXTERNAL_ADDRESS
          value: "false"
        - name: HZ_NETWORK_KUBERNETES_SERVICE_DNS
          value: "hazelcast-service.globeco-portfolio-accounting.svc.cluster.local"
        volumeMounts:
        - name: hazelcast-config
          mountPath: /opt/hazelcast/config_ext
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /hazelcast/health/node-state
            port: 5701
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /hazelcast/health/ready
            port: 5701
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: hazelcast-config
        configMap:
          name: hazelcast-config
  volumeClaimTemplates:
  - metadata:
      name: hazelcast-data
      labels:
        app.kubernetes.io/name: globeco-portfolio-accounting
        app.kubernetes.io/component: cache
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: standard
      resources:
        requests:
          storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: hazelcast-service
  namespace: globeco-portfolio-accounting
  labels:
    app.kubernetes.io/name: globeco-portfolio-accounting
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: cache
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  clusterIP: None  # Headless service for StatefulSet
  ports:
  - port: 5701
    targetPort: 5701
    protocol: TCP
    name: hazelcast
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: globeco-portfolio-accounting
    app.kubernetes.io/component: cache

---
apiVersion: v1
kind: Service
metadata:
  name: hazelcast-lb-service
  namespace: globeco-portfolio-accounting
  labels:
    app.kubernetes.io/name: globeco-portfolio-accounting
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: cache-lb
spec:
  type: ClusterIP
  ports:
  - port: 5701
    targetPort: 5701
    protocol: TCP
    name: hazelcast
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: globeco-portfolio-accounting
    app.kubernetes.io/component: cache

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: hazelcast-pdb
  namespace: globeco-portfolio-accounting
  labels:
    app.kubernetes.io/name: globeco-portfolio-accounting
    app.kubernetes.io/component: cache
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: globeco-portfolio-accounting
      app.kubernetes.io/component: cache 