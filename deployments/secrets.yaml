apiVersion: v1
kind: Secret
metadata:
  name: portfolio-accounting-secrets
  namespace: globeco-portfolio-accounting
  labels:
    app.kubernetes.io/name: globeco-portfolio-accounting
    app.kubernetes.io/instance: production
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: secrets
    app.kubernetes.io/part-of: globeco-suite
    app.kubernetes.io/managed-by: kubernetes
type: Opaque
data:
  # Database credentials (base64 encoded)
  # Default values for development - should be overridden in production
  DB_PASSWORD: cG9ydGZvbGlvX3Bhc3M=  # portfolio_pass
  DB_HOST: cG9zdGdyZXNxbC1zZXJ2aWNlLmdsb2JlY28tcG9ydGZvbGlvLWFjY291bnRpbmcuc3ZjLmNsdXN0ZXIubG9jYWw=  # postgresql-service.globeco-portfolio-accounting.svc.cluster.local
  
  # External service API keys
  PORTFOLIO_SERVICE_API_KEY: cG9ydGZvbGlvLXNlcnZpY2UtYXBpLWtleQ==  # portfolio-service-api-key
  SECURITY_SERVICE_API_KEY: c2VjdXJpdHktc2VydmljZS1hcGkta2V5  # security-service-api-key
  
  # JWT Secret for internal service communication
  JWT_SECRET: bXktand0LXNlY3JldC1rZXktZm9yLXBvcnRmb2xpby1hY2NvdW50aW5nLXNlcnZpY2U=  # my-jwt-secret-key-for-portfolio-accounting-service
  
  # Kafka credentials
  KAFKA_USERNAME: a2Fma2FfdXNlcg==  # kafka_user
  KAFKA_PASSWORD: a2Fma2FfcGFzcw==  # kafka_pass
  
  # Hazelcast cluster password
  HAZELCAST_PASSWORD: aGF6ZWxjYXN0X2NsdXN0ZXJfcGFzcw==  # hazelcast_cluster_pass
  
  # Monitoring credentials
  METRICS_AUTH_TOKEN: bWV0cmljcy1hdXRoLXRva2VuLWZvci1wb3J0Zm9saW8tYWNjb3VudGluZw==  # metrics-auth-token-for-portfolio-accounting
  
  # Tracing credentials
  JAEGER_AUTH_TOKEN: amFlZ2VyLWF1dGgtdG9rZW4tZm9yLXBvcnRmb2xpby1hY2NvdW50aW5n  # jaeger-auth-token-for-portfolio-accounting

---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-secrets
  namespace: globeco-portfolio-accounting
  labels:
    app.kubernetes.io/name: globeco-portfolio-accounting
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: database
type: Opaque
data:
  # PostgreSQL admin credentials
  POSTGRES_USER: cG9zdGdyZXM=  # postgres
  POSTGRES_PASSWORD: cG9zdGdyZXNfYWRtaW5fcGFzcw==  # postgres_admin_pass
  POSTGRES_DB: cG9ydGZvbGlvX2FjY291bnRpbmc=  # portfolio_accounting
  
  # Application database user
  PORTFOLIO_USER: cG9ydGZvbGlvX3VzZXI=  # portfolio_user
  PORTFOLIO_PASSWORD: cG9ydGZvbGlvX3Bhc3M=  # portfolio_pass

---
apiVersion: v1
kind: Secret
metadata:
  name: tls-certificates
  namespace: globeco-portfolio-accounting
  labels:
    app.kubernetes.io/name: globeco-portfolio-accounting
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # TLS certificate and key for HTTPS (self-signed for development)
  # In production, these should be generated by cert-manager or similar
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNuVENDQVlVQ0ZEekl2VVNIQjBxSGc4VjBmNWxmU3hseEkzNlFNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1BQXcKSUJjTk1qUXhNakU1TVRRek1qRXhXaGdQTWpFeU5ERXlNVGd4TkRNeU1URmFNQUF3Z1prd2dZUUNnWUVBdG9UQQpzekJRVUhxM0hoSUlGL1Y0dW9GSDdYUXI2MXhHTDBsbjhISHJEQUNnWUVBdlpkYXVzbWF3Sm9SQ2JXTVFQWmsKcXJTalMxQ3Fzem1YS1l5azZ3d0NnWUVBdTllMmliYVJmdnUyWWZkV3duRUdxcXhMUXExMGVOd1JkZUJOc2dVQwpzekJRVUhxM0hoSUlGL1Y0dW9GSDdYUXI2MXhHTDBsbjhISHJEQUNnWUVBdlpkYXVzbWF3Sm9SQ2JXTVFQWmsKcXJTalMxQ3Fzem1YS1l5azZ3d0NnWUVBdTllMmliYVJmdnUyWWZkV3duRUdxcXhMUXExMGVOd1JkZUJOc2dVQwpBd0VBQURBT0Jna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVhzSkFZS1kxNjRCOU1RUko=
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUNkZ0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQW1Bd2dnSmNBZ0VBQW9HQkFMYUV3TE13VUZCNnR4NE5DZz0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQ== 