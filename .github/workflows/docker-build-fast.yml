name: Development Docker Build (Fast AMD64)

on:
  push:
    branches:
      - develop
      - 'feature/*'
      - 'hotfix/*'
      - 'release/*'
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      include_arm64:
        description: 'Include ARM64 build'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: docker.io
  SERVER_IMAGE_NAME: kasbench/globeco-portfolio-accounting-service-server
  CLI_IMAGE_NAME: kasbench/globeco-portfolio-accounting-service-cli

jobs:
  # Fast AMD64-only build for development
  build-fast:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.REGISTRY }}/${{ env.SERVER_IMAGE_NAME }}
          ${{ env.REGISTRY }}/${{ env.CLI_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=dev-latest,enable={{is_default_branch}}

    - name: Build server image (AMD64)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        target: production
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.SERVER_IMAGE_NAME }}:${{ github.ref_name }}-amd64
        cache-from: type=gha,scope=server-fast
        cache-to: type=gha,mode=max,scope=server-fast
        build-args: |
          BUILDPLATFORM=linux/amd64

    - name: Build CLI image (AMD64)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        target: cli
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.CLI_IMAGE_NAME }}:${{ github.ref_name }}-amd64
        cache-from: type=gha,scope=cli-fast
        cache-to: type=gha,mode=max,scope=cli-fast
        build-args: |
          BUILDPLATFORM=linux/amd64

  # Optional ARM64 build (only when explicitly requested)
  build-arm64:
    runs-on: ubuntu-latest
    if: github.event.inputs.include_arm64 == 'true'
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        config-inline: |
          [worker.oci]
            max-parallelism = 1

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build server image (ARM64)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        target: production
        platforms: linux/arm64
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.SERVER_IMAGE_NAME }}:${{ github.ref_name }}-arm64
        cache-from: type=gha,scope=server-arm64-manual
        cache-to: type=gha,mode=max,scope=server-arm64-manual
        build-args: |
          BUILDPLATFORM=linux/amd64

    - name: Build CLI image (ARM64)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        target: cli
        platforms: linux/arm64
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.CLI_IMAGE_NAME }}:${{ github.ref_name }}-arm64
        cache-from: type=gha,scope=cli-arm64-manual
        cache-to: type=gha,mode=max,scope=cli-arm64-manual
        build-args: |
          BUILDPLATFORM=linux/amd64

  test:
    needs: build-fast
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run tests
      run: |
        echo "âœ… Fast build completed successfully"
        echo "ðŸš€ Images built: AMD64 only (fast development mode)"
        if [ "${{ github.event.inputs.include_arm64 }}" = "true" ]; then
          echo "ðŸ“± ARM64 images also built (manual request)"
        else
          echo "ðŸ’¡ To build ARM64 images, run workflow_dispatch with include_arm64=true" 