version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: globeco-portfolio-accounting-postgresql
    environment:
      POSTGRES_DB: portfolio_accounting
      POSTGRES_USER: portfolio_user
      POSTGRES_PASSWORD: portfolio_pass
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - globeco-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U portfolio_user -d portfolio_accounting"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Hazelcast Cache
  hazelcast:
    image: hazelcast/hazelcast:5.3.7
    container_name: globeco-portfolio-accounting-cache
    environment:
      JAVA_OPTS: "-Dhazelcast.config=/opt/hazelcast/config/hazelcast.xml"
    ports:
      - "5701:5701"
    volumes:
      - ./config/hazelcast.xml:/opt/hazelcast/config/hazelcast.xml:ro
    networks:
      - globeco-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5701/hazelcast/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Apache Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    container_name: globeco-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - globeco-network

  kafka:
    image: confluentinc/cp-kafka:7.5.3
    container_name: globeco-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_DELETE_TOPIC_ENABLE: true
    networks:
      - globeco-network
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Portfolio Service (External)
  portfolio-service:
    image: globeco/portfolio-service:latest
    container_name: globeco-portfolio-service
    ports:
      - "8001:8001"
    environment:
      DATABASE_URL: postgres://portfolio_user:portfolio_pass@postgres:5432/portfolio_accounting
      KAFKA_BROKERS: kafka:29092
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - globeco-network
    profiles:
      - external-services

  # Security Service (External)
  security-service:
    image: globeco/security-service:latest
    container_name: globeco-security-service
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgres://portfolio_user:portfolio_pass@postgres:5432/portfolio_accounting
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - globeco-network
    profiles:
      - external-services

  # Portfolio Accounting Service (Main Application)
  portfolio-accounting-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: globeco-portfolio-accounting-service
    ports:
      - "8087:8087"
      - "2345:2345"  # Delve debugger
    environment:
      # Database Configuration
      GLOBECO_PA_DATABASE_HOST: postgres
      GLOBECO_PA_DATABASE_PORT: 5432
      GLOBECO_PA_DATABASE_DATABASE: portfolio_accounting
      GLOBECO_PA_DATABASE_USER: portfolio_user
      GLOBECO_PA_DATABASE_PASSWORD: portfolio_pass
      GLOBECO_PA_DATABASE_SSL_MODE: disable
      GLOBECO_PA_DATABASE_MAX_OPEN_CONNS: 10
      GLOBECO_PA_DATABASE_MAX_IDLE_CONNS: 5
      GLOBECO_PA_DATABASE_CONN_MAX_LIFETIME: 300s
      GLOBECO_PA_DATABASE_MIGRATIONS_PATH: /app/migrations
      GLOBECO_PA_DATABASE_AUTO_MIGRATE: "true"

      # Cache Configuration
      GLOBECO_PA_CACHE_ENABLED: "true"
      GLOBECO_PA_CACHE_HOSTS: "hazelcast:5701"
      GLOBECO_PA_CACHE_CLUSTER_NAME: globeco-portfolio-accounting
      GLOBECO_PA_CACHE_TIMEOUT: 10s

      # Kafka Configuration
      GLOBECO_PA_KAFKA_ENABLED: "true"
      GLOBECO_PA_KAFKA_BROKERS: "kafka:29092"
      GLOBECO_PA_KAFKA_GROUP_ID: portfolio-accounting-service

      # External Services
      GLOBECO_PA_EXTERNAL_PORTFOLIO_SERVICE_HOST: portfolio-service
      GLOBECO_PA_EXTERNAL_PORTFOLIO_SERVICE_PORT: 8001
      GLOBECO_PA_EXTERNAL_SECURITY_SERVICE_HOST: security-service
      GLOBECO_PA_EXTERNAL_SECURITY_SERVICE_PORT: 8000

      # Application Configuration
      GLOBECO_PA_SERVER_HOST: 0.0.0.0
      GLOBECO_PA_SERVER_PORT: 8087
      GLOBECO_PA_LOGGING_LEVEL: debug
      GLOBECO_PA_LOGGING_FORMAT: json
      ENVIRONMENT: development

      # File Processing
      FILE_PROCESSING_BATCH_SIZE: 1000
      FILE_PROCESSING_WORKER_COUNT: 4
      FILE_PROCESSING_TIMEOUT: 300s
    volumes:
      - .:/app:delegated
      - go_cache:/go/pkg/mod
      - go_build_cache:/root/.cache/go-build
    depends_on:
      postgres:
        condition: service_healthy
      hazelcast:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - globeco-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8087/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # CLI Service (for file processing)
  portfolio-accounting-cli:
    build:
      context: .
      dockerfile: Dockerfile
      target: cli
    container_name: globeco-portfolio-accounting-cli
    environment:
      # Database Configuration
      GLOBECO_PA_DATABASE_HOST: postgres
      GLOBECO_PA_DATABASE_PORT: 5432
      GLOBECO_PA_DATABASE_DATABASE: portfolio_accounting
      GLOBECO_PA_DATABASE_USER: portfolio_user
      GLOBECO_PA_DATABASE_PASSWORD: portfolio_pass
      GLOBECO_PA_DATABASE_SSL_MODE: disable
      GLOBECO_PA_DATABASE_MIGRATIONS_PATH: /usr/local/share/migrations
      GLOBECO_PA_DATABASE_AUTO_MIGRATE: "true"
      
      # Service Configuration
      PORTFOLIO_ACCOUNTING_SERVICE_URL: http://portfolio-accounting-service:8087
    volumes:
      - ./data:/data:ro
      - ./output:/output
    depends_on:
      portfolio-accounting-service:
        condition: service_healthy
    networks:
      - globeco-network
    profiles:
      - cli
    command: ["--help"]

volumes:
  postgres_data:
    driver: local
  go_cache:
    driver: local
  go_build_cache:
    driver: local

networks:
  globeco-network:
    driver: bridge
    name: globeco-network 